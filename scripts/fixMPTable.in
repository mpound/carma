#!/bin/bash
#

# Script to repair monitor point mysql tables that have been marked as
# crashed.
# If a table name is supplied as an arg, use it.
#    NOTE: The table name does not include a suffix. (eg. no ".MYD").
# Otherwise, grep carma.log for error messages generated by the
# monitorDataLoader.
#
# For each table, the user is shown the output of a "CHECK TABLE" command
# and asked whether to repair it. (Repairing a table with no errors does
# not seem to be an error).

# Example line from log file containing the crashed table message:
# Apr  8 04:15:12 database /opt/rt/bin/monitorDataLoader:  {2008} {ERROR} {carma.dbms.monitorDataLoader} {} { Terminating monitorDataLoader :BaseException caught in Program - File: /home/control/Carma/carma/carma/dbms/DBConnection.cc, Line: 256, Message: DBConnection QUERY BUG!: File: /home/control/Carma/carma/carma/dbms/DBConnection.cc, Line: 1150, Message: SQLException: SQL Error: SELECT min(frameCount) FROM FrameNumericMonitorData_521379116_1240 [MySQL][ODBC 3.51 Driver][mysqld-5.0.21-log]Table 'FrameNumericMonitorData_521379116_1240' is marked as crashed and should be repaired
#
# A table is typically marked as being crashed because the database machine
# crashed while the table was open. Historically, only one or two tables
# will be marked as crashed.
#
# This script requires the mysql daemon to be running. If it isn't
# run myisamchk.

# Where to look for errors
LOGFILE=/var/carma/log/carma.log

################
# CARMA information (site dependent)
CARMA_TOOLS=@carma_tools@
mysql=${CARMA_TOOLS}/bin/mysql
CARMA=@prefix@
conffile=${CARMA}/conf/dbms/mysql.conf
################

# Mysql user and database to check
user="-u mdl"
db=carma

# String to search for
SEARCH='is marked as crashed and should be repaired'

# Get a list of crashed monitor point tables from carma.log
getList() {
    if [ ! -f $LOGFILE ]; then
	echo "$LOGFILE not found"
	exit 1
    fi

   # Get a list of crashed tables from the log file. (Typically only 1).
    grep monitorDataLoader $LOGFILE |grep "$SEARCH" | \
	sed -e 's/^.*FROM //' -e 's/ \[.*//' | sort -u
}

# Use user supplied table or get it from carma.log?
if [ $# -eq 1 ]; then
	LIST="$1"
else
    LIST=`getList`
fi

# Exit if nothing to do.
if [ -z "$LIST" ]; then
    echo "No tables to check."
    exit 0
fi

LD_LIBRARY_PATH=$CARMA_TOOLS/lib:$CARMA/carma_build/lib
export LD_LIBRARY_PATH

# Run mysql and execute a table command ({CHECK | REPAIR} TABLE <tablename>).
# Arg1: CHECK or REPAIR. (ANALYZE would work too).
# Arg2: Name of table. eg. MinuteIntegratedShortMonitorData_476373474_640
# The output of the command is displayed on the table.
doTableCommand() {
    CMD=$1
    table="$2"
    $mysql --defaults-file=$conffile $user $db <<EOF
    $CMD TABLE $table\G
    quit
EOF
}

# Run "CHECK table <tablename>"
# checkTable <tablename>
# check table state by running mysql
checkTable() {
    table="$1"
    doTableCommand CHECK $table
}

# Run "REPAIR table <tablename>"
# repairTable <tablename>
# repair table state by running mysql
repairTable() {
    table="$1"
    doTableCommand REPAIR $table
}

# Make sure config file exists.
if [ ! -r $conffile ]; then
    echo "Can't read config file: $conffile."
    exit 1
fi

# Make sure mysql exists.
if [ ! -x $mysql ]; then
    echo "$mysql is missing or not executable."
    exit 1
fi


# CHECK each table in the list. Then let the user decide whether to
# run "REPAIR TABLE".
for table in $LIST; do
    echo "Checking $table"
    checkTable $table
    read -p "Should $table be repaired?[n]: " -n 1 ans
    echo ""
    if [ "$ans" == "y" -o "$ans" == "Y" ]; then
	repairTable $table
    fi
    echo ""
done;
