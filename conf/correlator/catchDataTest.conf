# $Id: catchDataTest.conf,v 1.10 2008/01/08 02:12:07 abeard Exp $
# Correlator Config file

# define DO bands with a base of carma.correlator.Band
# maxNumberOfBands will be used to search for
# strings starting at band0 to band<maxNumberOfBands>
# remove bands by commenting out lines
# Note: The band names are the only parameters in this file which
#       are applied once at start of execution. So changing them
#       after the program has started will have NO effect.
maxNumberOfBands             = 17
baseDO                       = carma.correlator.slcorBand
#band0                        = ${baseDO}0
band1                        = ${baseDO}1
band2                        = ${baseDO}2
band3                        = ${baseDO}3
band4                        = ${baseDO}4
band5                        = ${baseDO}5
band6                        = ${baseDO}6
band7                        = ${baseDO}7
band8                        = ${baseDO}8
#band9                        = ${baseDO}9
#band10                       = ${baseDO}10
#band11                       = ${baseDO}11
#band12                       = ${baseDO}12
#band13                       = ${baseDO}13
#band14                       = ${baseDO}14
#band15                       = ${baseDO}15
#band16                       = ${baseDO}16

# set the configuration filename to read on the next udpate. The value
# 'default' will cause the file used in the contructor to be read.
# The filename should an absolute path or relative to the directory the
# program was run from.
configFilename               = default

# set time in seconds between reading this file. If this parameter doesn't
# exists, the default will be 5 seconds
delayBetweenFileReads        = 5


# turn debug on(1) or off(0)
debugAll                     = 0

# control the printing of time in front of debug statement
printTime                    = 0

# control the printing of the classname and method name in front of
# debug statement
prettyFunction               = 0

# debug option for classes in correlator/lib
debugBandManager             = 0
debugConfigChecker           = 1
debugCorrelatorAutoSideband  = 0
debugCorrelatorBand          = 0
debugCorrelatorBaseline      = 0
debugCorrelatorConfigChecker = 0
debugCorrelatorData          = 0
debugCorrelatorDataTestSZA   = 0
debugCorrelatorHeader        = 0
debugCorrelatorLowerSideband = 0
debugCorrelatorStats         = 0
debugCorrelatorUpperSideband = 0
debugDelayContainer          = 0
debugDelayWorker             = 0


# debug option for classes in correlator/transport
debugCorrelatorSimServer     = 0
debugCorrelatorUpdater       = 0

# apply(1) or don't apply(0) the setting of Delays in the correlator
# this will stop the DelayWorker from calling getInputDelay()
applyDelays                  = 1

# turn on(1) or off(0) the sending of data via CORBA
transportCorrelatorData                = 1
transportCorrelatorMonitorData         = 0

# time(sec) to delay writing out monitor data after every integral half second.
correlatorMonitorDelay       = 0.2

# debug option for classes in correlator/obsRecord2
debugDefaultCorrControl      = 0
debugCorbaCorrConsumer       = 0
debugCorbaCorrControl        = 0
debugCorbaCorrBandControl    = 0

# turn on/off logging commands
logCmdAll                       = 0
logCmdDefaultCorrControl        = 1

# debug option for classes in pipeline/util
debugCatchData               = 0
debugCorrelatorDataWriter    = 0
debugCorrelatorFileWriter    = 0
debugCorrelatorIpqWriter     = 0
debugCorrelatorVisBrickWriter = 0
debugCorrelatorVisBrickReader = 0
debugDataCollectorN          = 0
debugDataContainer           = 0
debugDataMerger              = 0
debugCorrelatorIntegrator    = 0

# debug option for classes in pipeline/bandMerge
debugcatchData               = 0

# options to turn on(1)/off(0) Correlator Data processing in the listeners.
# The call to the listener gets made, but the actual listener
# checks this config parameter to determine if it will return immediately or
# process the data.
#
# controls whether data is printed to the screen
correlatorDataWriter         = 1

# controls whether data is written do Dave H's matlab format file
correlatorFileWriter         = 1

# controls whether data are written to IPQ
correlatorIpqWriter          = 0

# controls whether data are written to VisBrick file
correlatorVisBrickWriter     = 1

# controls whether data are processed in integrator. This must be set to 1
# even while running this as a separate process(ie. correlatorIntegrator)
correlatorIntegrator         = 1

##############################
# Pipeline options
##############################

# catchData parameters
# Note: IPQ file will appear in /dev/shm
catchDataIPQfilename         = catchDataIPQ
catchDataIPQnumberOfElements = 5
# indicate which listeners to call
catchDataNotifyCorrelatorDataWriter       = 1
catchDataNotifyCorrelatorFileWriter       = 0
catchDataNotifyCorrelatorIpqWriter        = 0
catchDataNotifyCorrelatorVisBrickWriter   = 0
catchDataNotifyCorrelatorIntegrator       = 0

# IPQ parameters
# CorrelatorData size as of 12/7/04:
# chans  1 Band(Bytes)  16 Bands(Bytes)
# -----  -------------  ---------------
#   8      10648            170368
#  17      17560            280960
#  25      23704            379264
# 128     102808           4987264
#
# timing on a 1.9GHz Athlon)
# WB (16 Bands,8 Ants.17 chans) size=  290841 bytes (11ms serialize, 18ms des)
# SL (8 Bands,15 Ants,65 chans) size= 1546129 bytes(75ms serialize, 57ms des)
IPQmaxsize                   = 1547000


##############################
# correlatorIntegrator options
##############################
# number of records to integrate
ciNumberOfRecords            = 10
integratorIPQfilename        = integratorIPQ
integratorIPQnumberOfElements= 5

##############################
# correlatorDataWriter options
##############################
# print out header
cdwHeader                    = 0

# string indicating which bands to print starting at band0 to bandN
# (ex. 01100000000000001) would print band 1,2 and 16)
cdwBandMask                  = 00000000000000000

# string indicating which antennas to print starting at antenna0 to antennaN
#(ex. 01110000000000000 would print antennas 1,2 and 3)
cdwAntennaMask               = 01110000000000000

# srting indicating which sidebands to print.[Auto, USB, LSB]
#(ex. 101 would print auto, and LSB)
cdwSidebandMask              = 111

# Set to 1 to display complex numbers in (real, imaginary) format.
# Set to 0 to display complex numbers in (magnitude, phase[radians]) format
cdwDisplayComplex            = 0

# print out band averages. If set to 0, then print out every spectral channel
cdwBandAvg                   = 1

# print out total bands caught
cdwTotalBandsCaught          = 1

# turn on(1) or off(0) the sending of Pipeline Monitor data via CORBA
transportPipelineMonitorData = 0

# turn on(1) or off(0) the sending of Integrator Monitor data via CORBA
transportIntegratorMonitorData = 0

# time(sec) to delay writing out monitor data after every integral half second.
catchDataMonitorDelay       = 0.2

# time(sec) to delay writing out monitor data after every integral half second.
integratorMonitorDelay       = 0.2
